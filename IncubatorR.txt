library(e1071)
library(DMwR)
library(klaR)
library(class)
outdata=read.csv("outdata.csv",header=TRUE ,stringsAsFactors=FALSE)
data=read.csv("train.csv",header=TRUE ,stringsAsFactors=FALSE)
d<-data.frame(response=factor(data$Response))
testdata=read.csv("test.csv",header=TRUE)
t<-data.frame(response<-factor(outdata$Response))
data$UniqueIdentifier<-gsub("[[punct:]]","/",gsub("\\d+","1",gsub("[A-Z]{1,}","A",gsub("[a-z]{1,}","a", data$UniqueIdentifier))))
data$ InternalIdentifier <-gsub("[[punct:]]","/",gsub("\\d+","1",gsub("[A-Z]{1,}","A",gsub("[a-z]{1,}","a", data$ InternalIdentifier))))

data$CCPID<-gsub("[[punct:]]","/",gsub("\\d+","1",gsub("[A-Z]{1,}","A",gsub("[a-z]{1,}","a", data$CCPID))))

data$ExecutionTimestamp <-nchar(data$ExecutionTimestamp)
data$ClearingDate<-nchar(data$ClearingDate)
data$EffectiveDate<-nchar(data$EffectiveDate)
data$MaturityDate<-nchar(data$MaturityDate)

d$reportingfirmid<-factor(data$ReportingFirmID )
d$othercounterpartyidtype<-factor(data$OtherCounterpartyIDType)
d$othercounterpartyid<-factor(data$OtherCounterpartyID)
d$reportingfirmname<-factor(data$ReportingFirmName)
d$reportingfirmbranchcountrycode<-factor(data$ReportingFirmBranchCountryCode)
d$reportingfirmregisteredoffice<-factor(data$ReportingFirmRegisteredOffice)
d$reportingfirmcorporatesector<-factor(data$ReportingFirmCorporateSector)
d$reportingfirmfinancialstatus<-factor(data$ReportingFirmFinancialStatus)
d$submittingentitylei<-factor(data$SubmittingEntityLEI)
d$fundmanageridtype<-factor(data$FundManagerIDType)
d$fundmanagerid<-factor(data$FundManagerID)
d$clearingmemberidtype<-factor(data$ClearingMemberIDType)
d$clearingmemberid<-factor(data$ClearingMemberID)
d$mandatoryclearingindicator<-factor(data$MandatoryClearingIndicator)
d$productclassification<-factor(data$ProductClassification)
d$assetclass<-factor(data$AssetClass)
d$contracttype<-factor(data$ContractType)
d$underlyingidentificationtype<-factor(data$UnderlyingIdentificationType)
d$underlyinginstrumentid<- data$UnderlyingInstrumentID

d$uniqueidentifier<-factor(data$UniqueIdentifier)
d$prenovationuti<-factor(data$PrenovationUTI)
d$transactionlinkingnumber<-factor(data$TransactionLinkingNumber)
d$buysellindicator<-factor(data$BuySellIndicator)
d$pricerate<-factor(data$PriceRate)
d$pricecurrency<-factor(data$PriceCurrency)
d$actualnotional1<-factor(data$ActualNotional1)
d$actualnotional2<-factor(data$ActualNotional2)
d$notionalcurrency1<-factor(data$NotionalCurrency1)
d$notionalcurrency2<-factor(data$NotionalCurrency2)
d$deliverablecurrency<-factor(data$DeliverableCurrency)
d$quantity<-factor(data$Quantity)
d$reporttimezone<-factor(data$ReportTimezone)
d$executiontimestamp<-factor(data$ExecutionTimestamp)
d$effectivedate<-factor(data$EffectiveDate)
d$maturitydate<-factor(data$MaturityDate)
d$terminationdate<-factor(data$TerminationDate)
d$settlementdate<-factor(data$SettlementDate)
d$valuation<-factor(data$Valuation)
d$valuationcurrency<-factor(data$ValuationCurrency)
d$valuationtimestamp<-factor(data$ValuationTimestamp)
d$valuationtype<-factor(data$ValuationType)
d$collateralizationlevel<-factor(data$CollateralizationLevel)
d$collateraltype<-factor(data$CollateralType)
d$masteragreement<-factor(data$MasterAgreement)
d$masteragreementversion<-factor(data$MasterAgreementVersion)
d$transactionclearingobligation<-factor(data$TransactionClearingObligation)
d$clearingdate<-factor(data$ClearingDate)
d$ccpidtype<-factor(data$CCPIDtype)
d$ccpid<-factor(data$CCPID)
d$intragroup<-factor(data$Intragroup)
d$leg1type<-factor(data$Leg1Type)
d$leg2type<-factor(data$Leg2Type)
d$fixedrateleg1<-factor(data$FixedRateLeg1)
d$floatingrateleg1<-factor(data$FloatingRateLeg1)
d$fixedrateleg2<-factor(data$FixedRateLeg2)
d$floatingrateleg2<-factor(data$FloatingRateLeg2)
d$daycountfractionleg1<-factor(data$DayCountFractionLeg1)
d$daycountfractionleg2<-factor(data$DayCountFractionLeg2)
d$paymentfrequencyleg1<-factor(data$PaymentFrequencyLeg1)
d$paymentfrequencyleg2<-factor(data$PaymentFrequencyLeg2)
d$floatingrateresetfrequencyleg1<-factor(data$FloatingRateResetFrequencyLeg1)
d$floatingrateresetfrequencyleg2<-factor(data$FloatingRateResetFrequencyLeg2)
d$forwardexchangerate<-factor(data$ForwardExchangeRate)
d$exchangeratebasis<-factor(data$ExchangeRateBasis)
d$commoditybase<-factor(data$CommodityBase)
d$commoditydetails<-factor(data$CommodityDetails)
d$deliverypoint<-factor(data$DeliveryPoint)
d$interconnectionpoint<-factor(data$InterconnectionPoint)
d$loadtype<-factor(data$LoadType)
d$deliverystarttimestamp<-factor(data$DeliveryStartTimestamp)
d$deliveryendtimestamp<-factor(data$DeliveryEndTimestamp)
d$deliverycapacity<-factor(data$DeliveryCapacity)
d$quantityunit<-factor(data$QuantityUnit)
d$pricepertimeintervalquantities<-factor(data$PricePerTimeIntervalQuantities)
d$putcall<-factor(data$PutCall)
d$optionexercisetype<-factor(data$OptionExerciseType)
d$strikeprice<-factor(data$StrikePrice)
d$seniority<-factor(data$Seniority)
d$coupon<-factor(data$Coupon)
d$lastcrediteventdate<-factor(data$LastCreditEventDate)
d$series<-factor(data$Series)
d$indexfactor<-factor(data$IndexFactor)
d$actiontype<-factor(data$ActionType)
d$utiupdate<-factor(data$UTIUpdate)
d$level<-factor(data$Level)
d$internalidentifier<-factor(data$InternalIdentifier)

testdata$UniqueIdentifier<-gsub("[[punct:]]","/",gsub("\\d+","1",gsub("[A-Z]{1,}","A",gsub("[a-z]{1,}","a", testdata$UniqueIdentifier))))
testdata$ InternalIdentifier <-gsub("[[punct:]]","/",gsub("\\d+","1",gsub("[A-Z]{1,}","A",gsub("[a-z]{1,}","a", testdata$ InternalIdentifier))))

testdata$CCPID<-gsub("[[punct:]]","/",gsub("\\d+","1",gsub("[A-Z]{1,}","A",gsub("[a-z]{1,}","a", testdata$CCPID))))

testdata$ExecutionTimestamp <-as.character(testdata$ExecutionTimestamp)
testdata$ClearingDate<-as.character(testdata$ClearingDate)
testdata$EffectiveDate<- as.character(testdata$EffectiveDate)
testdata$MaturityDate<- as.character(testdata$MaturityDate)


testdata$ExecutionTimestamp <-nchar(testdata$ExecutionTimestamp)
testdata$ClearingDate<-nchar(testdata$ClearingDate)
testdata$EffectiveDate<-nchar(testdata$EffectiveDate)
testdata$MaturityDate<-nchar(testdata$MaturityDate)


t$reportingfirmid<-factor(testdata$ReportingFirmID)
t$othercounterpartyidtype<-factor(testdata$OtherCounterpartyIDType)
t$othercounterpartyid<-factor(testdata$OtherCounterpartyID)
t$reportingfirmname<-factor(testdata$ReportingFirmName)
t$reportingfirmbranchcountrycode<-factor(testdata$ReportingFirmBranchCountryCode)
t$reportingfirmregisteredoffice<-factor(testdata$ReportingFirmRegisteredOffice)
t$reportingfirmcorporatesector<-factor(testdata$ReportingFirmCorporateSector)
t$reportingfirmfinancialstatus<-factor(testdata$ReportingFirmFinancialStatus)
t$submittingentitylei<-factor(testdata$SubmittingEntityLEI)
t$fundmanageridtype<-factor(testdata$FundManagerIDType)
t$fundmanagerid<-factor(testdata$FundManagerID)
t$clearingmemberidtype<-factor(testdata$ClearingMemberIDType)
t$clearingmemberid<-factor(testdata$ClearingMemberID)
t$mandatoryclearingindicator<-factor(testdata$MandatoryClearingIndicator)
t$productclassification<-factor(testdata$ProductClassification)
t$assetclass<-factor(testdata$AssetClass)
t$contracttype<-factor(testdata$ContractType)
t$underlyingidentificationtype<-factor(testdata$UnderlyingIdentificationType)
t$underlyinginstrumentid<-factor(testdata$UnderlyingInstrumentID)
t$uniqueidentifier<-factor(testdata$UniqueIdentifier)
t$prenovationuti<-factor(testdata$PrenovationUTI)
t$transactionlinkingnumber<-factor(testdata$TransactionLinkingNumber)
t$buysellindicator<-factor(testdata$BuySellIndicator)
t$pricerate<-factor(testdata$PriceRate)
t$pricecurrency<-factor(testdata$PriceCurrency)
t$actualnotional1<-factor(testdata$ActualNotional1)
t$actualnotional2<-factor(testdata$ActualNotional2)
t$notionalcurrency1<-factor(testdata$NotionalCurrency1)
t$notionalcurrency2<-factor(testdata$NotionalCurrency2)
t$deliverablecurrency<-factor(testdata$DeliverableCurrency)
t$quantity<-factor(testdata$Quantity)
t$reporttimezone<-factor(testdata$ReportTimezone)
t$executiontimestamp<-factor(testdata$ExecutionTimestamp)
t$effectivedate<-factor(testdata$EffectiveDate)
t$maturitydate<-factor(testdata$MaturityDate)
t$terminationdate<-factor(testdata$TerminationDate)
t$settlementdate<-factor(testdata$SettlementDate)
t$valuation<-factor(testdata$Valuation)
t$valuationcurrency<-factor(testdata$ValuationCurrency)
t$valuationtimestamp<-factor(testdata$ValuationTimestamp)
t$valuationtype<-factor(testdata$ValuationType)
t$collateralizationlevel<-factor(testdata$CollateralizationLevel)
t$collateraltype<-factor(testdata$CollateralType)
t$masteragreement<-factor(testdata$MasterAgreement)
t$masteragreementversion<-factor(testdata$MasterAgreementVersion)
t$transactionclearingobligation<-factor(testdata$TransactionClearingObligation)
t$clearingdate<-factor(testdata$ClearingDate)
t$ccpidtype<-factor(testdata$CCPIDtype)
t$ccpid<-factor(testdata$CCPID)
t$intragroup<-factor(testdata$Intragroup)
t$leg1type<-factor(testdata$Leg1Type)
t$leg2type<-factor(testdata$Leg2Type)
t$fixedrateleg1<-factor(testdata$FixedRateLeg1)
t$floatingrateleg1<-factor(testdata$FloatingRateLeg1)
t$fixedrateleg2<-factor(testdata$FixedRateLeg2)
t$floatingrateleg2<-factor(testdata$FloatingRateLeg2)
t$daycountfractionleg1<-factor(testdata$DayCountFractionLeg1)
t$daycountfractionleg2<-factor(testdata$DayCountFractionLeg2)
t$paymentfrequencyleg1<-factor(testdata$PaymentFrequencyLeg1)
t$paymentfrequencyleg2<-factor(testdata$PaymentFrequencyLeg2)
t$floatingrateresetfrequencyleg1<-factor(testdata$FloatingRateResetFrequencyLeg1)
t$floatingrateresetfrequencyleg2<-factor(testdata$FloatingRateResetFrequencyLeg2)
t$forwardexchangerate<-factor(testdata$ForwardExchangeRate)
t$exchangeratebasis<-factor(testdata$ExchangeRateBasis)
t$commoditybase<-factor(testdata$CommodityBase)
t$commoditydetails<-factor(testdata$CommodityDetails)
t$deliverypoint<-factor(testdata$DeliveryPoint)
t$interconnectionpoint<-factor(testdata$InterconnectionPoint)
t$loadtype<-factor(testdata$LoadType)
t$deliverystarttimestamp<-factor(testdata$DeliveryStartTimestamp)
t$deliveryendtimestamp<-factor(testdata$DeliveryEndTimestamp)
t$deliverycapacity<-factor(testdata$DeliveryCapacity)
t$quantityunit<-factor(testdata$QuantityUnit)
t$pricepertimeintervalquantities<-factor(testdata$PricePerTimeIntervalQuantities)
t$putcall<-factor(testdata$PutCall)
t$optionexercisetype<-factor(testdata$OptionExerciseType)
t$strikeprice<-factor(testdata$StrikePrice)
t$seniority<-factor(testdata$Seniority)
t$coupon<-factor(testdata$Coupon)
t$lastcrediteventdate<-factor(testdata$LastCreditEventDate)
t$series<-factor(testdata$Series)
t$indexfactor<-factor(testdata$IndexFactor)
t$actiontype<-factor(testdata$ActionType)
t$utiupdate<-factor(testdata$UTIUpdate)
t$level<-factor(testdata$Level)
t$internalidentifier<-factor(testdata$InternalIdentifier)
 dtrain<-d
 ttrain<-t

levels(ttrain$recordid)=c(levels(d$recordid),levels(t$recordid))
levels(ttrain$response)=c(levels(d$response),levels(t$response))
levels(ttrain$reportingfirmid)=c(levels(d$reportingfirmid),levels(t$reportingfirmid))
levels(ttrain$othercounterpartyidtype)=c(levels(d$othercounterpartyidtype),levels(t$othercounterpartyidtype))
levels(ttrain$othercounterpartyid)=c(levels(d$othercounterpartyid),levels(t$othercounterpartyid))
levels(ttrain$reportingfirmabcdefgme)=c(levels(d$reportingfirmabcdefgme),levels(t$reportingfirmabcdefgme))
levels(ttrain$reportingfirmbranchcountrycode)=c(levels(d$reportingfirmbranchcountrycode),levels(t$reportingfirmbranchcountrycode))
levels(ttrain$reportingfirmregisteredoffice)=c(levels(d$reportingfirmregisteredoffice),levels(t$reportingfirmregisteredoffice))
levels(ttrain$reportingfirmcorporatesector)=c(levels(d$reportingfirmcorporatesector),levels(t$reportingfirmcorporatesector))
levels(ttrain$reportingfirmfiabcdefgncialstatus)=c(levels(d$reportingfirmfiabcdefgncialstatus),levels(t$reportingfirmfiabcdefgncialstatus))
levels(ttrain$submittingentitylei)=c(levels(d$submittingentitylei),levels(t$submittingentitylei))
levels(ttrain$fundmaabcdefggeridtype)=c(levels(d$fundmaabcdefggeridtype),levels(t$fundmaabcdefggeridtype))
levels(ttrain$fundmaabcdefggerid)=c(levels(d$fundmaabcdefggerid),levels(t$fundmaabcdefggerid))
levels(ttrain$clearingmemberidtype)=c(levels(d$clearingmemberidtype),levels(t$clearingmemberidtype))
levels(ttrain$clearingmemberid)=c(levels(d$clearingmemberid),levels(t$clearingmemberid))
levels(ttrain$mandatoryclearingindicator)=c(levels(d$mandatoryclearingindicator),levels(t$mandatoryclearingindicator))
levels(ttrain$productclassification)=c(levels(d$productclassification),levels(t$productclassification))
levels(ttrain$assetclass)=c(levels(d$assetclass),levels(t$assetclass))
levels(ttrain$contracttype)=c(levels(d$contracttype),levels(t$contracttype))
levels(ttrain$underlyingidentificationtype)=c(levels(d$underlyingidentificationtype),levels(t$underlyingidentificationtype))
levels(ttrain$underlyinginstrumentid)=c(levels(d$underlyinginstrumentid),levels(t$underlyinginstrumentid))
levels(ttrain$uniqueidentifier)=c(levels(d$uniqueidentifier),levels(t$uniqueidentifier))
levels(ttrain$prenovationuti)=c(levels(d$prenovationuti),levels(t$prenovationuti))
levels(ttrain$transactionlinkingnumber)=c(levels(d$transactionlinkingnumber),levels(t$transactionlinkingnumber))
levels(ttrain$buysellindicator)=c(levels(d$buysellindicator),levels(t$buysellindicator))
levels(ttrain$pricecurrency)=c(levels(d$pricecurrency),levels(t$pricecurrency))
levels(ttrain$actualnotioabcdefgl2)=c(levels(d$actualnotioabcdefgl2),levels(t$actualnotioabcdefgl2))
levels(ttrain$notioabcdefglcurrency1)=c(levels(d$notioabcdefglcurrency1),levels(t$notioabcdefglcurrency1))
levels(ttrain$notioabcdefglcurrency2)=c(levels(d$notioabcdefglcurrency2),levels(t$notioabcdefglcurrency2))
levels(ttrain$deliverablecurrency)=c(levels(d$deliverablecurrency),levels(t$deliverablecurrency))
levels(ttrain$reporttimezone)=c(levels(d$reporttimezone),levels(t$reporttimezone))
levels(ttrain$termiabcdefgtiondate)=c(levels(d$termiabcdefgtiondate),levels(t$termiabcdefgtiondate))
levels(ttrain$settlementdate)=c(levels(d$settlementdate),levels(t$settlementdate))
levels(ttrain$valuation)=c(levels(d$valuation),levels(t$valuation))
levels(ttrain$valuationcurrency)=c(levels(d$valuationcurrency),levels(t$valuationcurrency))
levels(ttrain$valuationtimestamp)=c(levels(d$valuationtimestamp),levels(t$valuationtimestamp))
levels(ttrain$valuationtype)=c(levels(d$valuationtype),levels(t$valuationtype))
levels(ttrain$collateralizationlevel)=c(levels(d$collateralizationlevel),levels(t$collateralizationlevel))
levels(ttrain$collateraltype)=c(levels(d$collateraltype),levels(t$collateraltype))
levels(ttrain$masteragreement)=c(levels(d$masteragreement),levels(t$masteragreement))
levels(ttrain$masteragreementversion)=c(levels(d$masteragreementversion),levels(t$masteragreementversion))
levels(ttrain$transactionclearingobligation)=c(levels(d$transactionclearingobligation),levels(t$transactionclearingobligation))
levels(ttrain$clearingdate)=c(levels(d$clearingdate),levels(t$clearingdate))
levels(ttrain$ccpidtype)=c(levels(d$ccpidtype),levels(t$ccpidtype))
levels(ttrain$ccpid)=c(levels(d$ccpid),levels(t$ccpid))
levels(ttrain$intragroup)=c(levels(d$intragroup),levels(t$intragroup))
levels(ttrain$leg1type)=c(levels(d$leg1type),levels(t$leg1type))
levels(ttrain$leg2type)=c(levels(d$leg2type),levels(t$leg2type))
levels(ttrain$fixedrateleg1)=c(levels(d$fixedrateleg1),levels(t$fixedrateleg1))
levels(ttrain$floatingrateleg1)=c(levels(d$floatingrateleg1),levels(t$floatingrateleg1))
levels(ttrain$fixedrateleg2)=c(levels(d$fixedrateleg2),levels(t$fixedrateleg2))
levels(ttrain$floatingrateleg2)=c(levels(d$floatingrateleg2),levels(t$floatingrateleg2))
levels(ttrain$daycountfractionleg1)=c(levels(d$daycountfractionleg1),levels(t$daycountfractionleg1))
levels(ttrain$daycountfractionleg2)=c(levels(d$daycountfractionleg2),levels(t$daycountfractionleg2))
levels(ttrain$paymentfrequencyleg1)=c(levels(d$paymentfrequencyleg1),levels(t$paymentfrequencyleg1))
levels(ttrain$paymentfrequencyleg2)=c(levels(d$paymentfrequencyleg2),levels(t$paymentfrequencyleg2))
levels(ttrain$floatingrateresetfrequencyleg1)=c(levels(d$floatingrateresetfrequencyleg1),levels(t$floatingrateresetfrequencyleg1))
levels(ttrain$floatingrateresetfrequencyleg2)=c(levels(d$floatingrateresetfrequencyleg2),levels(t$floatingrateresetfrequencyleg2))
levels(ttrain$forwardexchangerate)=c(levels(d$forwardexchangerate),levels(t$forwardexchangerate))
levels(ttrain$exchangeratebasis)=c(levels(d$exchangeratebasis),levels(t$exchangeratebasis))
levels(ttrain$commoditybase)=c(levels(d$commoditybase),levels(t$commoditybase))
levels(ttrain$commoditydetails)=c(levels(d$commoditydetails),levels(t$commoditydetails))
levels(ttrain$deliverypoint)=c(levels(d$deliverypoint),levels(t$deliverypoint))
levels(ttrain$interconnectionpoint)=c(levels(d$interconnectionpoint),levels(t$interconnectionpoint))
levels(ttrain$loadtype)=c(levels(d$loadtype),levels(t$loadtype))
levels(ttrain$deliverystarttimestamp)=c(levels(d$deliverystarttimestamp),levels(t$deliverystarttimestamp))
levels(ttrain$deliveryendtimestamp)=c(levels(d$deliveryendtimestamp),levels(t$deliveryendtimestamp))
levels(ttrain$deliverycapacity)=c(levels(d$deliverycapacity),levels(t$deliverycapacity))
levels(ttrain$quantityunit)=c(levels(d$quantityunit),levels(t$quantityunit))
levels(ttrain$pricepertimeintervalquantities)=c(levels(d$pricepertimeintervalquantities),levels(t$pricepertimeintervalquantities))
levels(ttrain$putcall)=c(levels(d$putcall),levels(t$putcall))
levels(ttrain$optionexercisetype)=c(levels(d$optionexercisetype),levels(t$optionexercisetype))
levels(ttrain$strikeprice)=c(levels(d$strikeprice),levels(t$strikeprice))
levels(ttrain$seniority)=c(levels(d$seniority),levels(t$seniority))
levels(ttrain$coupon)=c(levels(d$coupon),levels(t$coupon))
levels(ttrain$lastcrediteventdate)=c(levels(d$lastcrediteventdate),levels(t$lastcrediteventdate))
levels(ttrain$series)=c(levels(d$series),levels(t$series))
levels(ttrain$indexfactor)=c(levels(d$indexfactor),levels(t$indexfactor))
levels(ttrain$actiontype)=c(levels(d$actiontype),levels(t$actiontype))
levels(ttrain$utiupdate)=c(levels(d$utiupdate),levels(t$utiupdate))
levels(ttrain$level)=c(levels(d$level),levels(t$level))
levels(ttrain$interabcdefglidentifier)=c(levels(d$interabcdefglidentifier),levels(t$interabcdefglidentifier))

levels(dtrain$recordid)=c(levels(d$recordid),levels(t$recordid))
levels(dtrain$response)=c(levels(d$response),levels(t$response))
levels(dtrain$reportingfirmid)=c(levels(d$reportingfirmid),levels(t$reportingfirmid))
levels(dtrain$othercounterpartyidtype)=c(levels(d$othercounterpartyidtype),levels(t$othercounterpartyidtype))
levels(dtrain$othercounterpartyid)=c(levels(d$othercounterpartyid),levels(t$othercounterpartyid))
levels(dtrain$reportingfirmabcdefgme)=c(levels(d$reportingfirmabcdefgme),levels(t$reportingfirmabcdefgme))
levels(dtrain$reportingfirmbranchcountrycode)=c(levels(d$reportingfirmbranchcountrycode),levels(t$reportingfirmbranchcountrycode))
levels(dtrain$reportingfirmregisteredoffice)=c(levels(d$reportingfirmregisteredoffice),levels(t$reportingfirmregisteredoffice))
levels(dtrain$reportingfirmcorporatesector)=c(levels(d$reportingfirmcorporatesector),levels(t$reportingfirmcorporatesector))
levels(dtrain$reportingfirmfiabcdefgncialstatus)=c(levels(d$reportingfirmfiabcdefgncialstatus),levels(t$reportingfirmfiabcdefgncialstatus))
levels(dtrain$submittingentitylei)=c(levels(d$submittingentitylei),levels(t$submittingentitylei))
levels(dtrain$fundmaabcdefggeridtype)=c(levels(d$fundmaabcdefggeridtype),levels(t$fundmaabcdefggeridtype))
levels(dtrain$fundmaabcdefggerid)=c(levels(d$fundmaabcdefggerid),levels(t$fundmaabcdefggerid))
levels(dtrain$clearingmemberidtype)=c(levels(d$clearingmemberidtype),levels(t$clearingmemberidtype))
levels(dtrain$clearingmemberid)=c(levels(d$clearingmemberid),levels(t$clearingmemberid))
levels(dtrain$mandatoryclearingindicator)=c(levels(d$mandatoryclearingindicator),levels(t$mandatoryclearingindicator))
levels(dtrain$productclassification)=c(levels(d$productclassification),levels(t$productclassification))
levels(dtrain$assetclass)=c(levels(d$assetclass),levels(t$assetclass))
levels(dtrain$contracttype)=c(levels(d$contracttype),levels(t$contracttype))
levels(dtrain$underlyingidentificationtype)=c(levels(d$underlyingidentificationtype),levels(t$underlyingidentificationtype))
levels(dtrain$underlyinginstrumentid)=c(levels(d$underlyinginstrumentid),levels(t$underlyinginstrumentid))
levels(dtrain$uniqueidentifier)=c(levels(d$uniqueidentifier),levels(t$uniqueidentifier))
levels(dtrain$prenovationuti)=c(levels(d$prenovationuti),levels(t$prenovationuti))
levels(dtrain$transactionlinkingnumber)=c(levels(d$transactionlinkingnumber),levels(t$transactionlinkingnumber))
levels(dtrain$buysellindicator)=c(levels(d$buysellindicator),levels(t$buysellindicator))
levels(dtrain$pricecurrency)=c(levels(d$pricecurrency),levels(t$pricecurrency))
levels(dtrain$actualnotioabcdefgl2)=c(levels(d$actualnotioabcdefgl2),levels(t$actualnotioabcdefgl2))
levels(dtrain$notioabcdefglcurrency1)=c(levels(d$notioabcdefglcurrency1),levels(t$notioabcdefglcurrency1))
levels(dtrain$notioabcdefglcurrency2)=c(levels(d$notioabcdefglcurrency2),levels(t$notioabcdefglcurrency2))
levels(dtrain$deliverablecurrency)=c(levels(d$deliverablecurrency),levels(t$deliverablecurrency))
levels(dtrain$reporttimezone)=c(levels(d$reporttimezone),levels(t$reporttimezone))
levels(dtrain$termiabcdefgtiondate)=c(levels(d$termiabcdefgtiondate),levels(t$termiabcdefgtiondate))
levels(dtrain$settlementdate)=c(levels(d$settlementdate),levels(t$settlementdate))
levels(dtrain$valuation)=c(levels(d$valuation),levels(t$valuation))
levels(dtrain$valuationcurrency)=c(levels(d$valuationcurrency),levels(t$valuationcurrency))
levels(dtrain$valuationtimestamp)=c(levels(d$valuationtimestamp),levels(t$valuationtimestamp))
levels(dtrain$valuationtype)=c(levels(d$valuationtype),levels(t$valuationtype))
levels(dtrain$collateralizationlevel)=c(levels(d$collateralizationlevel),levels(t$collateralizationlevel))
levels(dtrain$collateraltype)=c(levels(d$collateraltype),levels(t$collateraltype))
levels(dtrain$masteragreement)=c(levels(d$masteragreement),levels(t$masteragreement))
levels(dtrain$masteragreementversion)=c(levels(d$masteragreementversion),levels(t$masteragreementversion))
levels(dtrain$transactionclearingobligation)=c(levels(d$transactionclearingobligation),levels(t$transactionclearingobligation))
levels(dtrain$clearingdate)=c(levels(d$clearingdate),levels(t$clearingdate))
levels(dtrain$ccpidtype)=c(levels(d$ccpidtype),levels(t$ccpidtype))
levels(dtrain$ccpid)=c(levels(d$ccpid),levels(t$ccpid))
levels(dtrain$intragroup)=c(levels(d$intragroup),levels(t$intragroup))
levels(dtrain$leg1type)=c(levels(d$leg1type),levels(t$leg1type))
levels(dtrain$leg2type)=c(levels(d$leg2type),levels(t$leg2type))
levels(dtrain$fixedrateleg1)=c(levels(d$fixedrateleg1),levels(t$fixedrateleg1))
levels(dtrain$floatingrateleg1)=c(levels(d$floatingrateleg1),levels(t$floatingrateleg1))
levels(dtrain$fixedrateleg2)=c(levels(d$fixedrateleg2),levels(t$fixedrateleg2))
levels(dtrain$floatingrateleg2)=c(levels(d$floatingrateleg2),levels(t$floatingrateleg2))
levels(dtrain$daycountfractionleg1)=c(levels(d$daycountfractionleg1),levels(t$daycountfractionleg1))
levels(dtrain$daycountfractionleg2)=c(levels(d$daycountfractionleg2),levels(t$daycountfractionleg2))
levels(dtrain$paymentfrequencyleg1)=c(levels(d$paymentfrequencyleg1),levels(t$paymentfrequencyleg1))
levels(dtrain$paymentfrequencyleg2)=c(levels(d$paymentfrequencyleg2),levels(t$paymentfrequencyleg2))
levels(dtrain$floatingrateresetfrequencyleg1)=c(levels(d$floatingrateresetfrequencyleg1),levels(t$floatingrateresetfrequencyleg1))
levels(dtrain$floatingrateresetfrequencyleg2)=c(levels(d$floatingrateresetfrequencyleg2),levels(t$floatingrateresetfrequencyleg2))
levels(dtrain$forwardexchangerate)=c(levels(d$forwardexchangerate),levels(t$forwardexchangerate))
levels(dtrain$exchangeratebasis)=c(levels(d$exchangeratebasis),levels(t$exchangeratebasis))
levels(dtrain$commoditybase)=c(levels(d$commoditybase),levels(t$commoditybase))
levels(dtrain$commoditydetails)=c(levels(d$commoditydetails),levels(t$commoditydetails))
levels(dtrain$deliverypoint)=c(levels(d$deliverypoint),levels(t$deliverypoint))
levels(dtrain$interconnectionpoint)=c(levels(d$interconnectionpoint),levels(t$interconnectionpoint))
levels(dtrain$loadtype)=c(levels(d$loadtype),levels(t$loadtype))
levels(dtrain$deliverystarttimestamp)=c(levels(d$deliverystarttimestamp),levels(t$deliverystarttimestamp))
levels(dtrain$deliveryendtimestamp)=c(levels(d$deliveryendtimestamp),levels(t$deliveryendtimestamp))
levels(dtrain$deliverycapacity)=c(levels(d$deliverycapacity),levels(t$deliverycapacity))
levels(dtrain$quantityunit)=c(levels(d$quantityunit),levels(t$quantityunit))
levels(dtrain$pricepertimeintervalquantities)=c(levels(d$pricepertimeintervalquantities),levels(t$pricepertimeintervalquantities))
levels(dtrain$putcall)=c(levels(d$putcall),levels(t$putcall))
levels(dtrain$optionexercisetype)=c(levels(d$optionexercisetype),levels(t$optionexercisetype))
levels(dtrain$strikeprice)=c(levels(d$strikeprice),levels(t$strikeprice))
levels(dtrain$seniority)=c(levels(d$seniority),levels(t$seniority))
levels(dtrain$coupon)=c(levels(d$coupon),levels(t$coupon))
levels(dtrain$lastcrediteventdate)=c(levels(d$lastcrediteventdate),levels(t$lastcrediteventdate))
levels(dtrain$series)=c(levels(d$series),levels(t$series))
levels(dtrain$indexfactor)=c(levels(d$indexfactor),levels(t$indexfactor))
levels(dtrain$actiontype)=c(levels(d$actiontype),levels(t$actiontype))
levels(dtrain$utiupdate)=c(levels(d$utiupdate),levels(t$utiupdate))
levels(dtrain$level)=c(levels(d$level),levels(t$level))
levels(dtrain$interabcdefglidentifier)=c(levels(d$interabcdefglidentifier),levels(t$interabcdefglidentifier))

## svm on dtrain
obj<-svm(response~.,data=dtrain,cost=1,gamma=1)
svmfit<-obj$best.model
predictions<-predict(svmfit)
mean(dtrain$response==predictions)

## RBF-kernel svm on dtrain 
obj<-tune(svm,response~.,data=dtrain,ranges=list(gamma=2^(-2:2),cost=5^(0:4)))
svmfit<-obj$best.model
predictions<-predict(svmfit)
mean(dtrain$response==predictions)


